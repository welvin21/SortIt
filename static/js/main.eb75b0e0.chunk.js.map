{"version":3,"sources":["components/Intro.js","redux/reducers/arr.js","redux/reducers/arrSorted.js","redux/reducers/frames.js","redux/reducers/index.js","redux/reducers/algo.js","redux/reducers/arrSize.js","redux/reducers/speed.js","redux/reducers/isSorting.js","redux/store/index.js","redux/actions/changeArr.js","redux/actions/changeSortingStatus.js","components/Toolbar/SizeSlider.js","redux/actions/changeArrSize.js","redux/actions/changeArrSorted.js","components/Toolbar/SpeedSlider.js","redux/actions/changeSpeed.js","components/Toolbar/AlgoSelector.js","redux/actions/changeAlgo.js","components/Toolbar/ArrayModifier.js","components/Toolbar/SortButton.js","redux/actions/changeFrames.js","algorithms/helperFunctions.js","algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/radixSort.js","algorithms/bucketSort.js","algorithms/shellSort.js","algorithms/cocktailSort.js","algorithms/index.js","components/Toolbar/Toolbar.js","components/Main.js","components/Sort.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","outline","position","top","left","transform","width","backgroundColor","palette","background","padding","spacing","borderRadius","fontSize","maxHeight","overflowY","description","margin","button","Intro","isOpen","closeModal","classes","Modal","aria-labelledby","aria-describedby","open","onClose","disableScrollLock","className","Typography","variant","id","Button","color","onClick","window","initialState","Array","keys","map","num","mainReducer","combineReducers","algo","state","action","type","payload","arrSize","arr","arrSorted","speed","isSorting","status","frames","store","createStore","changeArr","changeSortingStatus","root","display","gridTemplateRows","gridGap","label","fontFamily","slider","breakpoints","down","handleOnSizeChange","event","elem","dispatch","changeArrSize","changeArrSorted","SizeSlider","Slider","disabled","value","valueLabelDisplay","step","min","max","onChange","SpeedSlider","useDispatch","e","changeSpeed","algoSelector","AlgoSelector","algorithms","Select","changeAlgo","target","MenuItem","key","name","greyButton","fontWeight","ShuffleButton","tmp","length","index","Math","floor","random","splice","handleOnShuffleClick","ReverseButton","reverse","SortButton","style","getState","JSON","stringify","method","changeFrames","handleOnSortClick","defaultYield","doneYield","swapYield","filter","includes","i","j","bubbleSort","arrCopy","insertionSort","k","selectionYield","selectionSort","filteArr","j_min","swapYieldQuick","partition","main","quickSort","pivot","right","compareYield","merge","mergeSort","start","mid","end","start2","l","r","m","heap_root","heapSort","radixSort","maxLength","toString","buckets","from","place","pos","abs","pow","push","newArr","concat","slice","swapYieldBucket","bucketSort","a","bucketSize","shellSort","temp","parseInt","cocktailSort","swapped","toolbar","borderBottom","gridTemplateColumns","alignItems","rowGap","columnGap","Toolbar","useSelector","height","bar","alignSelf","sort","frame","next","done","Main","setTimeout","Sort","boxSizing","textAlign","App","useState","isModalOpen","setModalOpen","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb75b0e0.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Button, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    outline: 'none',\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    transform: `translate(-50%, -40%)`,\n    width: 'min(400px, 90vw)',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: '5px',\n    fontSize: '1%',\n    maxHeight: '85vh',\n    overflowY: 'scroll',\n  },\n  description: {\n    margin: '1% 0',\n  },\n  button: {\n    fontSize: 'auto',\n    margin: '2% 1% 0 1%',\n    width: '45%',\n  },\n}));\n\nexport const Intro = ({ isOpen, closeModal }) => {\n  const classes = useStyles();\n  const githubRepo = 'https://github.com/welvin21/SortIt';\n  const description = `Sorting is one of the most common problems not only in computer science but also in our daily life.\n                      The purpose of this project is to assist anyone who wants to gain thorough understanding of different sorting methods.\n                      There are 10 different sorting algorithms for you to try by clicking the playground button below.\n                      `;\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={isOpen}\n      onClose={() => {}}\n      disableScrollLock={true}\n    >\n      <div className={classes.paper}>\n        <Typography\n          className={classes.description}\n          variant=\"body1\"\n          id=\"simple-modal-description\"\n        >\n          {description}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => closeModal()}\n        >\n          Playground\n        </Button>\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          onClick={() => window.open(githubRepo, '_blank', 'noopener')}\n        >\n          Contribute\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n","const initialState = [...Array(80).keys()].map(num => num+1).map(num => ({num, color: null}));\nexport const arr = (state = initialState, action) => {\n  switch(action.type){\n    case 'CHANGE_ARRAY':\n      return (state = action.payload.arr);\n    default:\n      return state;\n  }\n};","const initialState = [...Array(80).keys()].map(num => num+1).map(num => ({num, color: null}));\nexport const arrSorted = (state = initialState, action) => {\n  switch(action.type){\n    case 'CHANGE_ARRAY_SORTED':\n      return (state = action.payload.arr);\n    default:\n      return state;\n  }\n};","function *initialState(){\n  yield null;\n  return;\n}\n\nexport const frames = (state = initialState, action) => {\n  switch(action.type){\n    case 'CHANGE_FRAMES':\n      return(state = action.payload.frames);\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { algo } from './algo';\nimport { arrSize } from './arrSize';\nimport { arr } from './arr';\nimport { arrSorted } from './arrSorted';\nimport { speed } from './speed';\nimport { isSorting } from './isSorting';\nimport { frames } from './frames';\n\nexport const mainReducer = combineReducers({\n  algo,\n  arrSize,\n  arr,\n  arrSorted,\n  speed,\n  isSorting,\n  frames\n});","export const algo = (state = 0, action) => {\n  switch(action.type){\n    case 'CHANGE_ALGO':\n      return (state = action.payload.algo);\n    default:\n      return state;\n  }\n};","export const arrSize = (state = 80, action) => {\n  switch(action.type){\n    case('CHANGE_ARR_SIZE'):\n      return (state = action.payload.arrSize);\n    default:\n      return state; \n  }\n};","export const speed = (state = 740, action) => {\n  switch(action.type){\n    case 'CHANGE_SPEED':\n      return (state = action.payload.speed);\n    default: \n      return state;\n  }\n};","export const isSorting = (state = false, action) => {\n  switch(action.type){\n    case 'CHANGE_SORTING_STATUS':\n      return( state = action.payload.status);\n    case 'FLIP_SORTING_STATUS':\n      return( state = !state);\n    default: \n      return state;\n  }\n};","import { createStore } from 'redux';\nimport { mainReducer } from '../reducers';\n\nexport const store = createStore(mainReducer);","export const changeArr = arr => {\n  return({\n    type: 'CHANGE_ARRAY',\n    payload: {arr}\n  });\n};","export const changeSortingStatus = status => {\n  return({\n    type: {status} ? 'CHANGE_SORTING_STATUS' : 'FLIP_SORTING_STATUS',\n    payload: {status}\n  });\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Slider } from '@material-ui/core';\nimport { store } from '../../redux/store';\nimport { changeArrSize, changeArr, changeArrSorted } from '../../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'grid',\n    gridTemplateRows: 'repeat(2,content)',\n    gridGap: 0,\n  },\n  label: {\n    margin: 0,\n    fontFamily: `'Noto Sans TC', sans-serif`,\n  },\n  slider: {\n    padding: '3% 0px 0px 0px',\n  },\n  [theme.breakpoints.down['sm']]: {\n    label: {\n      fontSize: 12,\n    },\n  },\n}));\n\nconst handleOnSizeChange = (event, arrSize) => {\n  const arr = [...Array(arrSize).keys()]\n    .map(elem => elem + 1)\n    .map(num => ({ num, color: null }));\n  const arrSorted = [...arr].map(num => ({ num, color: null }));\n  store.dispatch(changeArrSize(arrSize));\n  store.dispatch(changeArr(arr));\n  store.dispatch(changeArrSorted(arrSorted));\n};\n\nexport const SizeSlider = ({ arrSize, isSorting }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.label}>Size</p>\n      <Slider\n        disabled={isSorting}\n        className={classes.slider}\n        value={arrSize}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={5}\n        min={10}\n        max={150}\n        onChange={handleOnSizeChange}\n      />\n    </div>\n  );\n};\n","export const changeArrSize = arrSize => {\n  return({\n    type: 'CHANGE_ARR_SIZE',\n    payload: {arrSize}\n  });\n};","export const changeArrSorted = arr => {\n  return({\n    type: 'CHANGE_ARRAY_SORTED',\n    payload: {arr}\n  });\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { Slider } from '@material-ui/core';\nimport { changeSpeed } from '../../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'grid',\n    gridTemplateRows: 'repeat(2,content)',\n    gridGap: 0,\n  },\n  label: {\n    margin: 0,\n    fontFamily: `'Noto Sans TC', sans-serif`,\n  },\n  slider: {\n    padding: '3% 0px 0px 0px',\n  },\n  [theme.breakpoints.down['sm']]: {\n    label: {\n      fontSize: 12,\n    },\n  },\n}));\n\nexport const SpeedSlider = ({ speed, isSorting }) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  return (\n    <div className={classes.root}>\n      <p className={classes.label}>Speed</p>\n      <Slider\n        disabled={isSorting}\n        className={classes.slider}\n        value={speed}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"off\"\n        step={5}\n        min={500}\n        max={980}\n        onChange={(e, speed) => dispatch(changeSpeed(speed))}\n      />\n    </div>\n  );\n};\n","export const changeSpeed = speed => {\n  return({\n    type: 'CHANGE_SPEED',\n    payload: {speed}\n  });\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { changeAlgo } from '../../redux/actions';\n\nconst useStyles = makeStyles({\n  algoSelector: {\n    width: '20vw',\n  },\n});\n\nexport const AlgoSelector = ({ algorithms, algo, isSorting }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"selector\">\n      <Select\n        disabled={isSorting}\n        className={classes.algoSelector}\n        value={algo}\n        onChange={e => dispatch(changeAlgo(e.target.value))}\n      >\n        {algorithms.map(algo => (\n          <MenuItem key={algo.key} value={algo.key}>\n            {algo.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n};\n","export const changeAlgo = algo => {\n  return({\n    type: 'CHANGE_ALGO',\n    payload: {algo}\n  });\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { store } from '../../redux/store';\nimport { changeArr } from '../../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  greyButton: {\n    width: '100%',\n    padding: '2% 5%',\n    fontSize: '80%',\n    fontWeight: 700,\n    borderRadius: 5,\n    color: '#000',\n    background: 'linear-gradient(#fff,#cfcfcf)',\n  },\n  [theme.breakpoints.down['sm']]: {\n    greyButton: {\n      fontSize: '60%',\n    },\n  },\n}));\n\nconst handleOnShuffleClick = arr => {\n  let tmp = [...arr];\n  let arrSize = tmp.length;\n  while (arrSize > 0) {\n    let index = Math.floor(Math.random() * arrSize);\n    arrSize--;\n    tmp[index] = tmp.splice(arrSize, 1, tmp[index])[0];\n  }\n  store.dispatch(changeArr(tmp));\n};\n\nexport const ShuffleButton = ({ arr, isSorting }) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      disabled={isSorting}\n      className={classes.greyButton}\n      onClick={() => handleOnShuffleClick(arr)}\n    >\n      Shuffle\n    </button>\n  );\n};\n\nexport const ReverseButton = ({ arr, isSorting }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      disabled={isSorting}\n      className={classes.greyButton}\n      onClick={() => dispatch(changeArr([...[...arr].reverse()]))}\n    >\n      Reverse\n    </button>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { store } from '../../redux/store';\nimport { changeSortingStatus, changeFrames } from '../../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '100%',\n    padding: '2% 5%',\n    fontSize: '80%',\n    fontWeight: 700,\n    borderRadius: 5,\n    color: '#fff',\n  },\n  [theme.breakpoints.down['sm']]: {\n    button: {\n      fontSize: '60%',\n    },\n  },\n}));\n\nconst handleOnSortClick = algorithms => {\n  const { arr, arrSorted, algo, isSorting } = store.getState();\n  if (!isSorting && JSON.stringify(arr) !== JSON.stringify(arrSorted)) {\n    const frames = algorithms[algo].method(arr.map(elem => elem.num));\n    store.dispatch(changeFrames(frames));\n    store.dispatch(changeSortingStatus(true));\n  } else {\n    store.dispatch(changeSortingStatus(false));\n  }\n};\n\nconst greenBtn = 'linear-gradient(#63FF5E,#07D800)';\nconst redBtn = 'linear-gradient(#FF6666,#E90000)';\n\nexport const SortButton = ({ algorithms, isSorting }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <button\n        className={classes.button}\n        style={{ background: isSorting ? redBtn : greenBtn }}\n        onClick={() => handleOnSortClick(algorithms)}\n      >\n        {isSorting ? 'Stop' : 'Sort it!'}\n      </button>\n    </div>\n  );\n};\n","export const changeFrames = frames => {\n  return({\n    type: 'CHANGE_FRAMES',\n    payload: {frames}\n  });\n};","export const filter = (num,arr) => {\n  return({\n    num,\n    color: (arr.includes(num)) ? '#FF0000' : null\n  });\n}\n\nexport function *defaultYield(arr){\n  yield [...arr].map(num => ({num, color: null}));\n  return;\n}\n\nexport function *doneYield(arr){\n  for(let i = 0; i<arr.length; ++i){\n    yield [...arr].map(num => ({num, color: num <= arr[i] ? '#00FF00' : null}));\n  }\n  return;\n}\n\nexport function *swapYield(arr, i, j){\n  yield [...arr].map(num => filter(num,[arr[i], arr[j]]));\n  arr[i] = arr.splice(j, 1, arr[i])[0];\n  yield [...arr].map(num => filter(num,[arr[i], arr[j]]));\n  yield* defaultYield(arr);\n  return;\n}","import { defaultYield, doneYield, swapYield } from './helperFunctions';\n\nexport function* bubbleSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n  for (let i = 0; i < arrSize; ++i) {\n    for (let j = 0; j < arrSize - 1 - i; ++j) {\n      if (arrCopy[j] > arrCopy[j + 1]) {\n        yield* swapYield(arrCopy, j, j + 1);\n      }\n    }\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { filter, defaultYield, doneYield } from './helperFunctions';\n\nexport function* insertionSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n  for (let i = 1; i < arrSize; i++) {\n    if (arrCopy[i] < arrCopy[0]) {\n      for (let k = i; k > 0; --k) {\n        yield [...arrCopy].map(num =>\n          filter(num, [arrCopy[k], arrCopy[k - 1]])\n        );\n        arrCopy.splice(k, 0, arrCopy.splice(k - 1, 1)[0]);\n        yield [...arrCopy].map(num =>\n          filter(num, [arrCopy[k], arrCopy[k - 1]])\n        );\n        yield* defaultYield(arrCopy);\n      }\n    } else if (arrCopy[i] > arrCopy[i - 1]) {\n      continue;\n    } else {\n      for (let j = 1; j < i; j++) {\n        if (arrCopy[i] > arrCopy[j - 1] && arrCopy[i] < arrCopy[j]) {\n          for (let k = i; k > j; --k) {\n            yield [...arrCopy].map(num =>\n              filter(num, [arrCopy[k], arrCopy[k - 1]])\n            );\n            arrCopy.splice(k, 0, arrCopy.splice(k - 1, 1)[0]);\n            yield [...arrCopy].map(num =>\n              filter(num, [arrCopy[k], arrCopy[k - 1]])\n            );\n            yield* defaultYield(arrCopy);\n          }\n        }\n      }\n    }\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\n\nfunction* selectionYield(arr, filteArr, color) {\n  yield [...arr].map(num => ({\n    num,\n    color: filteArr.includes(num) ? color : null,\n  }));\n  return;\n}\n\nexport function* selectionSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n  for (let i = 0; i < arrSize - 1; ++i) {\n    let j_min = i;\n    for (let j = i + 1; j < arrSize; ++j) {\n      yield* selectionYield(arrCopy, [arrCopy[j_min]], '#0000FF');\n      yield* selectionYield(arrCopy, [arrCopy[j_min], arrCopy[j]], '#FF0000');\n      if (arrCopy[j] < arrCopy[j_min]) {\n        j_min = j;\n      }\n    }\n    if (j_min !== i) {\n      yield* swapYield(arrCopy, j_min, i);\n    }\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { defaultYield, doneYield } from './helperFunctions';\n\nfunction* swapYieldQuick(arr, i, j, pivot) {\n  yield [...arr].map(num => ({\n    num,\n    color:\n      num === pivot\n        ? '#0000FF'\n        : num === arr[i] || num === arr[j]\n        ? '#FF0000'\n        : null,\n  }));\n  arr[i] = arr.splice(j, 1, arr[i])[0];\n  yield [...arr].map(num => ({\n    num,\n    color:\n      num === pivot\n        ? '#0000FF'\n        : num === arr[i] || num === arr[j]\n        ? '#FF0000'\n        : null,\n  }));\n  yield [...arr].map(num => ({ num, color: num === pivot ? '#0000FF' : null }));\n  return;\n}\n\nfunction* partition(arr, left, right) {\n  let pivot = arr[Math.floor((right + left) / 2)],\n    i = left,\n    j = right;\n  while (i <= j) {\n    while (arr[i] < pivot) {\n      i++;\n    }\n    while (arr[j] > pivot) {\n      j--;\n    }\n    if (i <= j) {\n      yield* swapYieldQuick(arr, i, j, pivot);\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\nfunction* main(arr, arrSize, left, right) {\n  let index;\n  if (arrSize > 1) {\n    index = yield* partition(arr, left, right, index);\n    if (left < index - 1) {\n      yield* main(arr, arrSize, left, index - 1);\n    }\n    if (index < right) {\n      yield* main(arr, arrSize, index, right);\n    }\n  }\n}\n\nexport function* quickSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n  yield* main(arrCopy, arrSize, 0, arrSize - 1);\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { filter, defaultYield, doneYield } from './helperFunctions';\n\nfunction* compareYield(arr, i, j) {\n  yield [...arr].map(num => filter(num, [arr[i], arr[j]]));\n  return;\n}\n\nfunction* merge(arr, start, mid, end) {\n  let start2 = mid + 1;\n  if (arr[mid] <= arr[start2]) {\n    return;\n  }\n\n  while (start <= mid && start2 <= end) {\n    yield* compareYield(arr, start, start2);\n    if (arr[start] <= arr[start2]) {\n      start++;\n    } else {\n      let value = arr[start2];\n      let i = start2;\n      while (i !== start) {\n        arr[i] = arr[i - 1];\n        i--;\n      }\n      arr[start] = value;\n      yield* compareYield(arr, start, start + 1);\n      yield* defaultYield(arr);\n      start++;\n      mid++;\n      start2++;\n    }\n  }\n}\n\nfunction* main(arr, l, r) {\n  if (l < r) {\n    let m = l + Math.floor((r - l) / 2);\n    yield* main(arr, l, m);\n    yield* main(arr, m + 1, r);\n    yield* merge(arr, l, m, r);\n  }\n}\n\nexport function* mergeSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n  yield* main(arrCopy, 0, arrSize - 1);\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\n\nfunction* heap_root(arr, arrSize, i) {\n  var left = 2 * i + 1;\n  var right = 2 * i + 2;\n  var max = i;\n\n  if (left < arrSize && arr[left] > arr[max]) {\n    max = left;\n  }\n\n  if (right < arrSize && arr[right] > arr[max]) {\n    max = right;\n  }\n\n  if (max !== i) {\n    yield* swapYield(arr, i, max);\n    yield* heap_root(arr, arrSize, max);\n  }\n}\n\nexport function* heapSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n\n  for (var i = Math.floor(arrSize / 2); i >= 0; i -= 1) {\n    yield* heap_root(arrCopy, arrSize, i);\n  }\n\n  for (i = arrSize - 1; i > 0; i--) {\n    yield* swapYield(arrCopy, 0, i);\n    arrSize--;\n    yield* heap_root(arrCopy, arrSize, 0);\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { filter, defaultYield, doneYield } from './helperFunctions';\n\nconst getPosition = (num, place) => {\n  return Math.floor(Math.abs(num) / Math.pow(10, place)) % 10;\n};\n\nexport function* radixSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n\n  const maxLength = Math.max(...arrCopy).toString().length;\n  for (let i = 0; i < maxLength; i++) {\n    let buckets = Array.from({ length: 10 }, () => []);\n    for (let j = 0; j < arrSize; j++) {\n      let pos = getPosition(arrCopy[j], i);\n      buckets[pos].push(arrCopy[j]);\n      let newArr = [...[].concat(...buckets), ...arrCopy.slice(j + 1)];\n      yield [...newArr].map(num => filter(num, [...buckets[pos]]));\n    }\n\n    arrCopy = [].concat(...buckets);\n    for (let pos = 0; pos < buckets.length; ++pos) {\n      yield [...arrCopy].map(num => filter(num, [...buckets[pos]]));\n    }\n    yield* defaultYield(arrCopy);\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { filter, defaultYield, doneYield } from './helperFunctions';\n\nfunction* swapYieldBucket(buckets, pos, i, j) {\n  let arr = buckets[pos];\n  yield [...[].concat(...buckets)].map(num => filter(num, [arr[i], arr[j]]));\n  arr.splice(i, 0, arr.splice(j, 1)[0]);\n  buckets[pos] = arr;\n  yield [...[].concat(...buckets)].map(num => filter(num, [arr[i], arr[j]]));\n  yield* defaultYield([...[].concat(...buckets)]);\n  return;\n}\n\nfunction* insertionSort(buckets) {\n  for (let a = 0; a < buckets.length; ++a) {\n    let arr = buckets[a];\n    const arrSize = arr.length;\n    for (let i = 1; i < arrSize; i++) {\n      if (arr[i] < arr[0]) {\n        for (let k = i; k > 0; --k) {\n          yield* swapYieldBucket(buckets, a, k, k - 1);\n        }\n      } else if (arr[i] > arr[i - 1]) {\n        continue;\n      } else {\n        for (let j = 1; j < i; j++) {\n          if (arr[i] > arr[j - 1] && arr[i] < arr[j]) {\n            for (let k = i; k > j; --k) {\n              yield* swapYieldBucket(buckets, a, k, k - 1);\n            }\n          }\n        }\n      }\n    }\n    buckets[a] = arr;\n  }\n}\n\nexport function* bucketSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n\n  let buckets = [];\n  let bucketSize = Math.floor(Math.max(...arrCopy) / 10);\n  for (let i = 0; i < bucketSize + 1; ++i) {\n    buckets.push([]);\n  }\n\n  for (let i = 0; i < arrSize; ++i) {\n    let pos = Math.floor(arrCopy[i] / 10);\n    buckets[pos].push(arrCopy[i]);\n    let newArr = [...[].concat(...buckets), ...arrCopy.slice(i + 1)];\n    yield [...newArr].map(num => filter(num, [...buckets[pos]]));\n  }\n  yield* insertionSort(buckets);\n\n  arrCopy = [...[].concat(...buckets)];\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\n\nexport function* shellSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n\n  let step = Math.floor(arrSize / 2);\n  while (step > 0) {\n    for (let i = step; i < arrSize; i++) {\n      let j = i;\n      let temp = arrCopy[i];\n\n      while (j >= step && arrCopy[j - step] > temp) {\n        yield* swapYield(arrCopy, j - step, j);\n        j -= step;\n      }\n      arrCopy[j] = temp;\n    }\n\n    if (step === 2) {\n      step = 1;\n    } else {\n      step = parseInt((step * 5) / 11);\n    }\n  }\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\n\nexport function* cocktailSort(arr) {\n  let arrCopy = [...arr];\n  let arrSize = arrCopy.length;\n\n  let start = 0,\n    end = arrSize - 1;\n  let swapped = true;\n\n  while (swapped) {\n    swapped = false;\n    for (let i = start; i < end; ++i) {\n      if (arrCopy[i] > arrCopy[i + 1]) {\n        yield* swapYield(arrCopy, i, i + 1);\n        swapped = true;\n      }\n    }\n\n    if (!swapped) {\n      break;\n    }\n\n    swapped = false;\n    end -= 1;\n    for (let i = end - 1; i >= start; --i) {\n      if (arrCopy[i] > arrCopy[i + 1]) {\n        yield* swapYield(arrCopy, i, i + 1);\n        swapped = true;\n      }\n    }\n\n    start += 1;\n  }\n\n  yield* doneYield(arrCopy);\n  yield* defaultYield(arrCopy);\n  return;\n}\n","import { bubbleSort } from './bubbleSort';\nimport { insertionSort } from './insertionSort';\nimport { selectionSort } from './selectionSort';\nimport { quickSort } from './quickSort';\nimport { mergeSort } from './mergeSort';\nimport { heapSort } from './heapSort';\nimport { radixSort } from './radixSort';\nimport { bucketSort } from './bucketSort';\nimport { shellSort } from './shellSort';\nimport { cocktailSort } from './cocktailSort';\n\nexport const algorithms = [\n  {name: 'Bubble Sort', key: 0, method: bubbleSort},\n  {name: 'Insertion Sort', key: 1, method: insertionSort},\n  {name: 'Selection Sort', key: 2, method: selectionSort},\n  {name: 'Quick Sort', key: 3, method: quickSort},\n  {name: 'Merge Sort', key: 4, method: mergeSort},\n  {name: 'Heap Sort', key: 5, method: heapSort},\n  {name: 'Radix Sort', key: 6, method: radixSort},\n  {name: 'Bucket Sort', key: 7, method: bucketSort},\n  {name: 'Shell Sort', key: 8, method: shellSort},\n  {name: 'Cocktail Sort', key: 9, method: cocktailSort},\n]","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { SizeSlider } from './SizeSlider';\nimport { SpeedSlider } from './SpeedSlider';\nimport { AlgoSelector } from './AlgoSelector';\nimport { ReverseButton, ShuffleButton } from './ArrayModifier';\nimport { SortButton } from './SortButton';\nimport { algorithms } from '../../algorithms';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    padding: '2% 2% 1% 2%',\n    borderBottom: 'min(1px,1vw) solid #000',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(6,1fr)',\n    gridGap: '1%',\n    alignItems: 'flex-end',\n    [theme.breakpoints.down('sm')]: {\n      padding: 20,\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      rowGap: '20%',\n      columnGap: '2%',\n    },\n  },\n}));\n\nexport const Toolbar = () => {\n  const classes = useStyles();\n\n  const algo = useSelector(state => state.algo);\n  const arr = useSelector(state => state.arr);\n  const arrSize = useSelector(state => state.arrSize);\n  const speed = useSelector(state => state.speed);\n  const isSorting = useSelector(state => state.isSorting);\n\n  return (\n    <div className={classes.toolbar}>\n      <SizeSlider arrSize={arrSize} isSorting={isSorting} />\n      <SpeedSlider speed={speed} isSorting={isSorting} />\n      <AlgoSelector algorithms={algorithms} algo={algo} isSorting={isSorting} />\n      <ReverseButton arr={arr} isSorting={isSorting} />\n      <ShuffleButton arr={arr} isSorting={isSorting} />\n      <SortButton algorithms={algorithms} isSorting={isSorting} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { changeSortingStatus, changeArr } from '../redux/actions';\nimport { store } from '../redux/store';\n\nconst useStyles = makeStyles({\n  main: {\n    height: '100%',\n    display: 'flex',\n    fontFamily: `'Noto Sans TC', sans-serif`,\n  },\n  bar: {\n    alignSelf: 'flex-end',\n    display: 'inline-block',\n  },\n});\n\nconst sort = async () => {\n  const { frames } = store.getState();\n  const frame = frames.next();\n  store.dispatch(\n    !frame.done ? changeArr(frame.value) : changeSortingStatus(false)\n  );\n};\n\nexport const Main = () => {\n  const classes = useStyles();\n\n  const arrSize = useSelector(state => state.arrSize);\n  const arr = useSelector(state => state.arr);\n  const speed = useSelector(state => state.speed);\n  const isSorting = useSelector(state => state.isSorting);\n\n  if (isSorting) {\n    setTimeout(() => sort(), 1000 - speed);\n  }\n\n  const width = `${100 / arrSize}%`;\n  return (\n    <div className={classes.main}>\n      {arr.map(({ num, color }) => {\n        const height = `${((num + 1) / (arrSize + 1)) * 100}%`;\n        const backgroundColor =\n          isSorting && color ? color : `hsl(${(num / arrSize) * 360},100%,80%)`;\n        return (\n          <div\n            key={num}\n            className={classes.bar}\n            style={{ height, width, backgroundColor }}\n          ></div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Toolbar } from './Toolbar/Toolbar';\nimport { Main } from './Main';\n\nconst useStyles = makeStyles({\n  sort: {\n    height: '100vh',\n    display: 'grid',\n    gridTemplateRows: 'min-content',\n  },\n});\n\nexport const Sort = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.sort}>\n      <Toolbar />\n      <Main />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Intro } from './components/Intro';\nimport { Sort } from './components/Sort';\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: 'border-box',\n    textAlign: 'center',\n  },\n});\n\nexport const App = () => {\n  const classes = useStyles();\n  const [isModalOpen, setModalOpen] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      <Intro isOpen={isModalOpen} closeModal={() => setModalOpen(false)} />\n      <Sort />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { App } from './App';\nimport { store } from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}